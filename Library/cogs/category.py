import disnake
from disnake.ext import commands


class category(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    class Programming_Button(disnake.ui.View):
        def __init__(self):
            super().__init__()
            #self.add_item(disnake.ui.Button(label="1", style=disnake.ButtonStyle.blurple))
        @disnake.ui.button(label="1", style=disnake.ButtonStyle.blurple)
        async def button1(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
            embed = disnake.Embed(title="–Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è python", description = "Test", colour = disnake.Color.random())
            embed.set_footer(text=f"‚úè {inter.author.name}")
            await inter.send(embed=embed)
        @disnake.ui.button(label="2", style=disnake.ButtonStyle.blurple)
        async def button2(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
            embed = disnake.Embed(title="PrTest2", description = "Test", colour = disnake.Color.random())
            embed.set_footer(text=f"‚úè {inter.author.name}")
            await inter.send(embed=embed)
        @disnake.ui.button(label="3", style=disnake.ButtonStyle.blurple)
        async def button3(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
            embed = disnake.Embed(title="PrTest3", description = "Test", colour = disnake.Color.random())
            embed.set_footer(text=f"‚úè {inter.author.name}")
            await inter.send(embed=embed)


    class Iskustvo_Button(disnake.ui.View):
        def __init__(self):
            super().__init__()
        @disnake.ui.button(label="1", style=disnake.ButtonStyle.blurple)
        async def button1(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
            embed = disnake.Embed(title="IskustvoTest1", description = "Test", colour = disnake.Color.random())
            embed.set_footer(text=f"‚úè {inter.author.name}")
            await inter.send(embed=embed)
        @disnake.ui.button(label="2", style=disnake.ButtonStyle.blurple)
        async def button2(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
            embed = disnake.Embed(title="IskustvoTest2", description = "Test", colour = disnake.Color.random())
            embed.set_footer(text=f"‚úè {inter.author.name}")
            await inter.send(embed=embed)
        @disnake.ui.button(label="3", style=disnake.ButtonStyle.blurple)
        async def button3(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
            embed = disnake.Embed(title="IskustvoTest3", description = "Test", colour = disnake.Color.random())
            embed.set_footer(text=f"‚úè {inter.author.name}")
            await inter.send(embed=embed)


    class Bisnes_and_invest(disnake.ui.View):
        def __init__(self):
            super().__init__()
        @disnake.ui.button(label="1", style=disnake.ButtonStyle.blurple)
        async def button1(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
            embed = disnake.Embed(title="BisnesTest1", description = "Test", colour = disnake.Color.random())
            embed.set_footer(text=f"‚úè {inter.author.name}")
            await inter.send(embed=embed)
        @disnake.ui.button(label="2", style=disnake.ButtonStyle.blurple)
        async def button2(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
            embed = disnake.Embed(title="BisnesTest2", description = "Test", colour = disnake.Color.random())
            embed.set_footer(text=f"‚úè {inter.author.name}")
            await inter.send(embed=embed)
        @disnake.ui.button(label="3", style=disnake.ButtonStyle.blurple)
        async def button3(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
            embed = disnake.Embed(title="BisnesTest3", description = "Test", colour = disnake.Color.random())
            embed.set_footer(text=f"‚úè {inter.author.name}")
            await inter.send(embed=embed)


    class Dropdown(disnake.ui.StringSelect):
        def __init__(self):
            options = [
                disnake.SelectOption(label="–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", emoji="üë®‚Äçüíª", value="1"), # description="test" 
                disnake.SelectOption(label="–ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ –¥–∏–∑–∞–π–Ω", emoji="üé®", value="2"),
                disnake.SelectOption(label="–ë–∏–∑–Ω–µ—Å –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", emoji="üí∏", value="3"),
                disnake.SelectOption(label="–ú–µ–¥–∏—Ü–∏–Ω–∞", emoji="üíâ", value="4"),
                disnake.SelectOption(label="–ó–¥–æ—Ä–æ–≤—å–µ –∏ —Å–ø–æ—Ä—Ç", emoji="üí™", value="5"),
                disnake.SelectOption(label="–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", emoji="üé≠", value="6"),
                disnake.SelectOption(label="–ö—É–ª–∏–Ω–∞—Ä–∏—è –∏ –¥–æ–º–∞—à–Ω–µ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ", emoji="üçΩ", value="7")
            ]
            super().__init__(placeholder="–í—ã–±—Ä–∞—Ç—å:", min_values=1, max_values=1, options=options)# min_values=1 - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ | max_values=1 - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        async def callback(self, inter: disnake.MessageInteraction):
            if self.values[0] == "1":
                embed = disnake.Embed(title="_–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥/—Å—Ç–∞—Ç–µ–π –¥–ª—è —á—Ç–µ–Ω–∏—è –Ω–∞ —Ç–µ–º—É ```–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ:```_", colour = 0x006400)
                embed.add_field(name = "1. Python", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "2. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "3. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.set_footer(text=f"‚úè {inter.author.name}")
                view = Programming_Button()
                await inter.send(embed=embed, view=view)
            if self.values[0] == "2":
                embed = disnake.Embed(title="_–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥/—Å—Ç–∞—Ç–µ–π –¥–ª—è —á—Ç–µ–Ω–∏—è –Ω–∞ —Ç–µ–º—É ```–ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ –¥–∏–∑–∞–π–Ω:```_", colour = disnake.Color.random())
                embed.add_field(name = "1. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "2. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "3. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.set_footer(text=f"‚úè {inter.author.name}")
                view = Iskustvo_Button()
                await inter.send(embed=embed, view=view)
            if self.values[0] == "3":
                embed = disnake.Embed(title="_–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥/—Å—Ç–∞—Ç–µ–π –¥–ª—è —á—Ç–µ–Ω–∏—è –Ω–∞ —Ç–µ–º—É ```–ë–∏–∑–Ω–µ—Å –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏:```_", colour = disnake.Color.random())
                embed.add_field(name = "1. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "2. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "3. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.set_footer(text=f"‚úè {inter.author.name}")
                view = Bisnes_and_invest()
                await inter.send(embed=embed, view=view) 
            if self.values[0] == "4":
                embed = disnake.Embed(title="_–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥/—Å—Ç–∞—Ç–µ–π –¥–ª—è —á—Ç–µ–Ω–∏—è –Ω–∞ —Ç–µ–º—É ```–ú–µ–¥–∏—Ü–∏–Ω–∞:```_", colour = disnake.Color.random())
                embed.add_field(name = "1. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "2. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "3. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.set_footer(text=f"‚úè {inter.author.name}")
                await inter.send(embed=embed)
            if self.values[0] == "5":
                embed = disnake.Embed(title="_–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥/—Å—Ç–∞—Ç–µ–π –¥–ª—è —á—Ç–µ–Ω–∏—è –Ω–∞ —Ç–µ–º—É ```–ó–¥–æ—Ä–æ–≤—å–µ –∏ —Å–ø–æ—Ä—Ç:```_", colour = disnake.Color.random())
                embed.add_field(name = "1. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "2. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "3. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.set_footer(text=f"‚úè {inter.author.name}")
                await inter.send(embed=embed)
            if self.values[0] == "6":
                embed = disnake.Embed(title="_–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥/—Å—Ç–∞—Ç–µ–π –¥–ª—è —á—Ç–µ–Ω–∏—è –Ω–∞ —Ç–µ–º—É ```–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è:```_", colour = disnake.Color.random())
                embed.add_field(name = "1. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "2. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "3. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.set_footer(text=f"‚úè {inter.author.name}")
                await inter.send(embed=embed)
            if self.values[0] == "7":
                embed = disnake.Embed(title="_–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥/—Å—Ç–∞—Ç–µ–π –¥–ª—è —á—Ç–µ–Ω–∏—è –Ω–∞ —Ç–µ–º—É ```–ö—É–ª–∏–Ω–∞—Ä–∏—è –∏ –¥–æ–º–∞—à–Ω–µ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ:```_", colour = disnake.Color.random())
                embed.add_field(name = "1. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "2. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.add_field(name = "3. Test", value = "–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
                embed.set_footer(text=f"‚úè {inter.author.name}")
                await inter.send(embed=embed)

    class DropdownView(disnake.ui.View):
        def __init__(self):
            super().__init__()
            self.add_item(Dropdown())

    @commands.slash_command(name = "–∫–∞—Ç–µ–≥–æ—Ä–∏–∏", description="–≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —á—Ç–µ–Ω–∏—è") 
    async def __category(self, inter):
        await inter.send("_–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —á—Ç–µ–Ω–∏—è_", view = DropdownView())
.

def setup(bot):
    bot.add_cog(category(bot))